# Pipeline for Nebula Logger
name: Deployment

on:
    push:
        paths-ignore:
            - 'content/**'
            - 'docs/**'
            - 'examples/**'
            - 'packages/**'
            - '.forceignore'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'Contributing.md'
            - 'LICENSE'
            - 'package.json'
            - 'README.md'
            - './**/README.md'
            - 'sfdx-project.json'
    pull_request:
        types: [opened, synchronize, reopened]
        paths-ignore:
            - 'content/**'
            - 'docs/**'
            - 'examples/**'
            - 'packages/**'
            - '.forceignore'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'Contributing.md'
            - 'LICENSE'
            - 'package.json'
            - 'README.md'
            - './**/README.md'
            - 'sfdx-project.json'

jobs:
    commit-something:
        name: 'Commit some file'
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Create and commit a file'
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action Bot"
                  echo "Hello, world" >> someFile.txt
                  git add someFile.txt
                  git commit -m "Add changes"
                  git push

            - name: 'Restore node_modules cache'
              id: cache-npm
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ env.cache-name }}-
                      npm-
            - name: 'Install npm dependencies'
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci

            - name: 'Install Salesforce CLI'
              run: npm install sfdx-cli --global

            - name: 'Create and commit new package version'
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action Bot"
                  npm run package:version:create:unlocked
                  git add ./sfdx-project.json
                  git commit -m "Created new package version"
                  git push
