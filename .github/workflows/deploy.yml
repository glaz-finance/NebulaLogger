# Pipeline for Nebula Logger
name: Deployment

on:
    push:
        branches:
            - main
            - 'devops/**'
        paths-ignore:
            - 'content/**'
            - 'docs/**'
            - 'examples/**'
            - 'packages/**'
            - '.forceignore'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'CONTRIBUTING.md'
            - 'LICENSE'
            - 'package.json'
            - 'README.md'
            - './**/README.md'
            - 'sfdx-project.json'
    pull_request:
        types: [opened, synchronize, reopened]
        paths-ignore:
            - 'content/**'
            - 'docs/**'
            - 'examples/**'
            - 'packages/**'
            - '.forceignore'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'CONTRIBUTING.md'
            - 'LICENSE'
            - 'package.json'
            - 'README.md'
            - './**/README.md'
            - 'sfdx-project.json'

jobs:
    code-quality-tests:
        name: 'Run Code Quality Tests'
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Restore node_modules cache'
              id: cache-npm
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ env.cache-name }}-
                      npm-

            - name: 'Install npm dependencies'
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci

            - name: 'Install Salesforce CLI'
              run: npm install sfdx-cli --global

            - name: 'Verify package version number is updated'
              if: ${{ github.event_name == 'pull_request' }}
              run: |
                  echo ${{ env.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  sfdx auth:sfdxurl:store --sfdxurlfile ./DEVHUB_SFDX_URL.txt --setalias nebula-logger-packaging --setdefaultdevhubusername
                  rm ./DEVHUB_SFDX_URL.txt
                  npm run package:version:number:verify
              env:
                  DEVHUB_SFDX_URL: ${{ secrets.DEVHUB_SFDX_URL }}

            - name: 'Verify LWC with ESLint'
              run: npm run lint:verify

            - name: 'Verify Apex with SFDX Scanner'
              run: npm run scan

            - name: 'Verify docs are updated'
              run: npm run docs:verify

            - name: 'Verify formatting with Prettier'
              run: npm run prettier:verify

    lwc-tests:
        name: 'Run LWC Tests'
        needs: [code-quality-tests]
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Restore node_modules cache'
              id: cache-npm
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ env.cache-name }}-
                      npm-

            - name: 'Install npm dependencies'
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci

            - name: 'Run LWC Tests'
              run: npm run test:lwc

            - name: 'Upload LWC code coverage to Codecov.io'
              uses: codecov/codecov-action@v2.0.2
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  flags: LWC

    scratch-org-tests:
        name: 'Run Scratch Org Tests'
        needs: [code-quality-tests]
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            - name: 'Restore node_modules cache'
              id: cache-npm
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ env.cache-name }}-
                      npm-

            - name: 'Install npm dependencies'
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci

            - name: 'Install Salesforce CLI'
              run: npm install sfdx-cli --global

            - name: 'Populate DevHub Auth Files'
              shell: bash
              run: |
                  echo ${{ env.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  echo ${{ env.NEBULA_CI_DEVHUB_SFDX_URL }} > ./NEBULA_CI_DEVHUB_SFDX_URL.txt
                  echo ${{ env.JONGPIE_DEVHUB_SFDX_URL }} > ./JONGPIE_DEVHUB_SFDX_URL.txt
              env:
                  DEVHUB_SFDX_URL: ${{ secrets.DEVHUB_SFDX_URL }}
                  NEBULA_CI_DEVHUB_SFDX_URL: ${{ secrets.NEBULA_CI_DEVHUB_SFDX_URL }}
                  JONGPIE_DEVHUB_SFDX_URL: ${{ secrets.JONGPIE_DEVHUB_SFDX_URL }}

            - name: 'Authorize Dev Hubs'
              run: |
                  sfdx auth:sfdxurl:store --sfdxurlfile ./DEVHUB_SFDX_URL.txt --setalias nebula-logger-packaging --setdefaultdevhubusername
                  sfdx auth:sfdxurl:store --sfdxurlfile ./NEBULA_CI_DEVHUB_SFDX_URL.txt --setalias nebula-ci-devhub
                  sfdx auth:sfdxurl:store --sfdxurlfile ./JONGPIE_DEVHUB_SFDX_URL.txt --setalias jongpie-devhub

            - name: 'Create Scratch Org with Experience Sites Enabled'
              run: npm run org:create:experience -- -durationdays 1 -devhubs nebula-logger-packaging,nebula-ci-devhub,jongpie-devhub

            - name: 'Create Test Experience Site'
              run: npm run experience:create

            - name: 'Wait for Experience Site creation'
              uses: maddox/actions/sleep@master
              with:
                  args: '120'

            - name: 'Push Source to Scratch Org'
              run: npm run source:push

            - name: 'Assign Logger Admin Permission Set'
              run: npm run permset:assign:admin

            - name: 'Run Apex Tests'
              run: npm run test:apex

            - name: 'Delete unsupported code coverage files'
              run: rm ./tests/apex/test-result-707*-codecoverage.json

            - name: 'Upload Apex test code coverage to Codecov.io'
              uses: codecov/codecov-action@v2.0.2
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  flags: Apex

            - name: 'Delete Scratch Org'
              run: npm run org:delete:noprompt
              if: ${{ always() }}

    create-and-install-package-version:
        name: 'Create & Install Package Version'
        needs: [lwc-tests, scratch-org-tests]
        if: ${{ github.event_name == 'pull_request' }}
        runs-on: ubuntu-latest
        environment: Test
        steps:
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.ref }}

            - name: 'Restore node_modules cache'
              id: cache-npm
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ env.cache-name }}-
                      npm-

            - name: 'Install npm dependencies'
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci

            - name: 'Install Salesforce CLI'
              run: npm install sfdx-cli --global

            - name: 'Populate Org Auth Files'
              shell: bash
              run: |
                  echo ${{ env.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
                  echo ${{ env.NEBULA_PKG_DEMO_SANDBOX_SFDX_URL }} > ./NEBULA_PKG_DEMO_SANDBOX_SFDX_URL.txt
              env:
                  DEVHUB_SFDX_URL: ${{ secrets.DEVHUB_SFDX_URL }}
                  NEBULA_PKG_DEMO_SANDBOX_SFDX_URL: ${{ secrets.NEBULA_PKG_DEMO_SANDBOX_SFDX_URL }}

            - name: 'Authorize Orgs'
              run: |
                  sfdx auth:sfdxurl:store --sfdxurlfile ./DEVHUB_SFDX_URL.txt --setalias nebula-logger-packaging --setdefaultdevhubusername
                  sfdx auth:sfdxurl:store --sfdxurlfile ./NEBULA_PKG_DEMO_SANDBOX_SFDX_URL.txt --setalias nebula-logger-package-demo

            - name: 'Create & Install Package Version'
              run: npx pwsh ./scripts/build/create-and-install-package-version.ps1 -targetusername nebula-logger-package-demo

            - name: 'Commit New Package Version'
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action Bot"
                  npx prettier --write ./sfdx-project.json
                  git add ./sfdx-project.json
                  git commit -m "Created new package version"
                  git push
